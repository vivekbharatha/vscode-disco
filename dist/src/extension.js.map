{"version":3,"sources":["../webpack/bootstrap",".././src/color.js",".././src/disco.js",".././src/extension.js","../external \"vscode\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;ACvBA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,cAAc,mBAAO,CAAC,+BAAS;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA,cAAc;AACd;AACA,cAAc;AACd,YAAY;AACZ,QAAQ;AACR;AACA,QAAQ;AACR;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,aAAa;AACb;AACA,aAAa;AACb,KAAK;AACL;AACA,KAAK;AACL;;AAEA,qC;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA,uB;;;;;;;;;;;AC9EA;AACA;AACA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,cAAc,mBAAO,CAAC,+BAAS;;AAE/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,wBAAwB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,0DAA0D,2BAA2B;AACrF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2BAA2B;AACrF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACpEA,mC","file":"src/extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.js\");\n","let Color = {};\n\nColor.getClockColor = function () {\n    let now = new Date(),\n        hours = now.getHours(),\n        minutes = now.getMinutes(),\n        seconds = now.getSeconds(),\n        formattedHours = (hours > 9) ? hours : '0' + hours,\n        formattedMinutes = (minutes > 9) ? minutes : '0' + minutes,\n        formattedSeconds = (seconds > 9) ? seconds : '0' + seconds;\n    \n    return '#' + formattedHours + formattedMinutes + formattedSeconds;\n}\n\nColor.getRandomColor = function () {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nmodule.exports = Color;","const vscode = require('vscode');\nconst Color = require('./color');\nlet Disco = {};\n\nlet defaults = {\n    \"activityBar.background\": \"#ffffff16\",\n    \"activityBar.foreground\": \"#e7e7e7\",\n    \"activityBar.inactiveForeground\": \"#e7e7e799\",\n    \"activityBarBadge.background\": \"#e03f84\",\n    \"activityBarBadge.foreground\": \"#e7e7e7\",\n    \"titleBar.activeBackground\": \"#103362\",\n    \"titleBar.inactiveBackground\": \"#10336299\",\n    \"titleBar.activeForeground\": \"#e7e7e7\",\n    \"titleBar.inactiveForeground\": \"#e7e7e799\",\n    \"statusBar.background\": \"#103362\",\n    \"statusBarItem.hoverBackground\": \"#174a8e\",\n    \"statusBar.foreground\": \"#e7e7e7\"\n};\n\nDisco.startDisco = function () {\n    vscode._state = 'startDisco';\n    clearInterval(vscode._discoInterval);\n    let configuration = vscode.workspace.getConfiguration();\n    // new Promise((resolve, reject) => {\n    //     vscode._discoInterval = setInterval(async () => {\n    //       if (vscode._state === '') {\n    //         return clearInterval(vscode._discoInterval);\n    //       }\n    //       await configuration.update(\"workbench.colorCustomizations\", {\n    //           \"activityBar.background\": Color.getRandomColor()\n    //       }, vscode.workspace.name === undefined).then((data) => {\n              \n    //           resolve();\n    //       }).catch((e) => {\n    //           vscode.window.showInformationMessage('Error in starting disco!');\n    //       });\n    //     }, vscode._discoIntervalValue);\n    // }).then(() => {\n    //     vscode.window.showInformationMessage('Disco started!');\n    // });\n    while(1) {\n\n    }\n}\n\n\nDisco.reset = function () {\n    vscode._state = '';\n    clearInterval(vscode._discoInterval);\n    let configuration = vscode.workspace.getConfiguration();\n    new Promise((resolve, reject) => {\n      let k = configuration;\n            configuration.update(\"workbench.colorCustomizations\", {\n                \"activityBar.background\": defaults['activityBar.background']\n            }, vscode.workspace.name === undefined).then((data) => {\n                \n                resolve();\n            }).catch((e) => {\n                vscode.window.showInformationMessage('Error in setting default theme!');\n            });\n    }).then(() => {\n        vscode.window.showInformationMessage('Disco default theme applied!');\n    });\n}\n\nlet updateColors = async function() { \n  while(vscode._state !== 'startDisco') {\n    await configuration.update(\"workbench.colorCustomizations\", {\n              \"activityBar.background\": Color.getRandomColor()\n          }, vscode.workspace.name === undefined).then((data) => {\n              \n              resolve();\n          }).catch((e) => {\n              vscode.window.showInformationMessage('Error in starting disco!');\n          });\n  }\n}\n\nmodule.exports = Disco;","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\nconst Disco = require('./disco');\n\nvscode._discoInterval;\nvscode._discoIntervalValue = 100;\nvscode._state = '';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"vscode-disco\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with  registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet r_startDisco = vscode.commands.registerCommand('extension.startDisco', function () {\n\t\tDisco.startDisco();\n\t});\n\n\tlet r_stopDisco = vscode.commands.registerCommand('extension.stopDisco', function () {\n\t\tvscode._state = '';\n\t\tclearInterval(vscode._discoInterval);\n\t\tvscode.window.showInformationMessage('Disco stoped!');\n\t});\n\n\tlet r_increaseDiscoIntervalTime = vscode.commands.registerCommand('extension.increaseDiscoIntervalTime', function () {\n\t\tvscode._discoIntervalValue += 100;\n\t\tvscode.window.showInformationMessage(`Disco interval: ${vscode._discoIntervalValue}`);\n\t\tif (typeof Disco[vscode._state] === 'function') {\n\t\t\tDisco[vscode._state]();\n\t\t}\n\t});\n\t\n\tlet r_decreaseDiscoIntervalTime = vscode.commands.registerCommand('extension.decreaseDiscoIntervalTime', function () {\n\t\tif (vscode._discoIntervalValue - 100 < 100) {\n\t\t\tvscode.window.showInformationMessage('Minimum value is 100ms');\n\t\t\treturn;\n\t\t}\n\t\tvscode._discoIntervalValue -= 100;\n\t\tvscode.window.showInformationMessage(`Disco interval: ${vscode._discoIntervalValue}`);\n\t\tif (typeof Disco[vscode._state] === 'function') {\n\t\t\tDisco[vscode._state]();\n\t\t}\n\t});\n\n\tlet r_reset = vscode.commands.registerCommand('extension.resetColors', function () {\n\t\tDisco.reset();\n\t});\n\n}\n\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\nfunction deactivate() {}\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","module.exports = require(\"vscode\");"],"sourceRoot":""}